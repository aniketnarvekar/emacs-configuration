#+TITLE: Emacs Initialization Configuration. 

* Emacs package Configrations.

** Buffer

   #+BEGIN_SRC emacs-lisp

   (global-set-key (kbd "S-C-<left>") 'shrink-window-horizontally)
   (global-set-key (kbd "S-C-<right>") 'enlarge-window-horizontally)
   (global-set-key (kbd "S-C-<down>") 'shrink-window)
   (global-set-key (kbd "S-C-<up>") 'enlarge-window)
   
   #+END_SRC
   
** Font

   #+BEGIN_SRC emacs-lisp

   ;; Set default font and size.
   (add-to-list 'default-frame-alist
                       '(font . "Courier-16"))
   
   #+END_SRC
   
** Window

   #+BEGIN_SRC emacs-lisp
   
   ;; setup frame size of emacs for full screen or full maximum size from both the sides in linux/windows.
   (set-frame-parameter nil 'fullscreen 'fullboth)
   (put 'upcase-region 'disabled nil)


   #+END_SRC
   
** Theme

   # #+BEGIN_SRC emacs-lisp

   # (custom-set-variables
   # ;; custom-set-variables was added by Custom.
   # ;; If you edit it by hand, you could mess it up, so be careful.
   # ;; Your init file should contain only one such instance.
   # ;; If there is more than one, they won't work right.
   # '(ansi-color-faces-vector
   # [default default default italic underline success warning error])
   # '(ansi-color-names-vector
   # ["black" "#d55e00" "#009e73" "#f8ec59" "#0072b2" "#cc79a7" "#56b4e9" "white"])
   # '(custom-enabled-themes (quote (slime)))
   # '(custom-safe-themes
   # (quote
   # ("54d091c28661aa25516d4f58044412e745eddb50c8e04e3a0788a77941981bb0" "ed4b75a4f5cf9b1cd14133e82ce727166a629f5a038ac8d91b062890bc0e2d1b" default)))
   # '(package-selected-packages
   # (quote
   # (use-package slime-theme slime paredit org-bullets neotree magit gruber-darker-theme auto-complete all-the-icons)))
   # '(show-paren-mode t))
   # (custom-set-faces
   # ;; custom-set-faces was added by Custom.
   # ;; If you edit it by hand, you could mess it up, so be careful.
   # ;; Your init file should contain only one such instance.
   # ;; If there is more than one, they won't work right.
   # '(region ((t (:background "#E95420" :foreground "#000000"))))

   # #+END_SRC
   
** Magit

   #+BEGIN_SRC emacs-lisp
   
   (require 'magit)
   (global-set-key (kbd "C-x g") 'magit-status)

   #+END_SRC

** Org

   #+BEGIN_SRC emacs-lisp

   (global-set-key (kbd "C-c l") 'org-store-link)
   (global-set-key (kbd "C-c a") 'org-agenda)
   (global-set-key (kbd "C-c c") 'org-capture)
   (setq org-hide-emphasis-markers t)
   (setq org-hide-leading-stars t)
   
   #+END_SRC
** Paredit

   #+BEGIN_SRC emacs-lisp

   (autoload 'enable-paredit-mode "paredit" "Turn on pseudo-structural editing of Lisp code." t)
   (add-hook 'emacs-lisp-mode-hook       #'enable-paredit-mode)
   (add-hook 'eval-expression-minibuffer-setup-hook #'enable-paredit-mode)
   (add-hook 'ielm-mode-hook             #'enable-paredit-mode)
   (add-hook 'lisp-mode-hook             #'enable-paredit-mode)
   (add-hook 'lisp-interaction-mode-hook #'enable-paredit-mode)
   (add-hook 'scheme-mode-hook           #'enable-paredit-mode)


   (add-hook 'slime-repl-mode-hook (lambda () (paredit-mode +1)))

   ;; Stop SLIME's REPL from grabbing DEL,
   ;; which is annoying when backspacing over a '('
   (defun override-slime-repl-bindings-with-paredit ()
   (define-key slime-repl-mode-map
   (read-kbd-macro paredit-backward-delete-key) nil))
   (add-hook 'slime-repl-mode-hook 'override-slime-repl-bindings-with-paredit)

   
   #+END_SRC
** Melpa

   #+BEGIN_SRC emacs-lisp

   ;; Add melpa stable package manager for emacs.
   (add-to-list 'package-archives
   '("melpa-stable" . "https://stable.melpa.org/packages/") t)
   
   #+END_SRC
   
** Slime

   #+BEGIN_SRC emacs-lisp

   (load (expand-file-name "~/quicklisp/slime-helper.el"))

   ;; Replace "sbcl" with the path to your implementation
   (setq inferior-lisp-program "/usr/local/bin/sbcl")

   (global-set-key (kbd "<f9>") 'slime)
   (global-set-key (kbd "s-<f9>")
		(lambda () (interactive)
		  (switch-to-buffer "*slime-repl sbcl*")))

		  (define-key slime-repl-mode-map (kbd "<f9>")
		  'slime-restart-inferior-lisp)
   
   #+END_SRC
** OTHER

   #+BEGIN_SRC emacs-lisp

   (global-visual-line-mode 1)
   
    ;; show enviromental path in find file, etc...
    (setenv "PATH" (concat (getenv "PATH") ":/usr/local/bin"))

    ;; Show paren highlights.
    (show-paren-mode 1)

    (put 'scroll-left 'disabled nil)

    (size-indication-mode t)
   
   #+END_SRC
   
